services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    hostname: traefik
    networks:
      - public
    ports:
      - 80:80
      - 443:443
    environment:
      HOST: $HOST
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_data:/etc/traefik/acme
      - ./configs/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./configs/traefik/routing:/etc/traefik/routing:ro
  
  frontend:
    build:
       context: frontend
       dockerfile: Dockerfile
    image: frontend  
    container_name: frontend
    hostname: frontend
    ports:
      - 4040:80
    networks:
      - public

  backend:
    build:
       context: backend
       dockerfile: Dockerfile
    image: backend  
    container_name: backend
    hostname: backend
    networks:
      - private
      - public
    ports:
      - 5001:5001
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5001/
      Swagger__RoutePrefix: swagger
      Swagger__Endpoints__0__Url: https://$HOST/backend/swagger/v1/swagger.json
      Swagger__Endpoints__0__Name: swagger api
      Swagger__ServersUrls__0: https://$HOST/backend
      Minio__Endpoint: minio:9000
      Minio__AccessKey: $MINIO_ROOT_USER
      Minio__SecretKey: $MINIO_ROOT_PASSWORD
      Minio__PublicUrl: https://$HOST/static
      Smtp__Host: smtp4dev
      Smtp__Port: 25
      JsonWebToken__JsonWebKey: /etc/backend/jwk.json
      ConnectionStrings__Postgres: Server=postgres;Port=5432;Database=edupulse;Username=$POSTGRES_USER;Password=$POSTGRES_PASSWORD;
    volumes:
      - ./backend/jwk.json:/etc/backend/jwk.json:ro
    depends_on:
      postgres:
        condition: service_healthy

  smtp4dev:
    image: rnwood/smtp4dev:3.3.3-ci20240302152
    container_name: smtp4dev
    hostname: smtp4dev
    networks:
      - public
      - private
    ports:
      - 2525:25
      - 8080:8080
    environment:
      ServerOptions__HostName: smtp4dev
    volumes:
      - smtp4dev_data:/smtp4dev

  postgres:
    image: postgres:16.1-alpine
    container_name: postgres
    hostname: postgres
    networks:
      - private
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: edupulse
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./configs/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./configs/postgres/scripts:/docker-entrypoint-initdb.d:ro
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: [ CMD, pg_isready, -U, $POSTGRES_USER, -d, edupulse ]
      interval: 15s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    hostname: redis
    networks:
      - private
    ports:
      - 6379:6379
    volumes:
      - ./configs/redis/redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf

  centrifugo:
    image: centrifugo/centrifugo:v5.2.2
    container_name: centrifugo
    hostname: centrifugo
    networks:
      - private
      - public
    ports:
      - 8000:8000
    volumes:
      - ./configs/centrifugo/centrifugo.json:/etc/centrifugo/config.json:ro
    command: centrifugo -c /etc/centrifugo/config.json
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    image: bitnami/minio:2024.2.4
    container_name: minio
    hostname: minio
    networks:
      - private
      - public
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: $MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: $MINIO_ROOT_PASSWORD
      MINIO_SCHEME: http
      MINIO_SERVER_URL: http://localhost:9000
    volumes:
      - minio_data:/bitnami/minio/data

volumes:
  traefik_data:
  minio_data:
  postgres_data:
  smtp4dev_data:

networks:
  public:
    driver: bridge
  private:
    driver: bridge